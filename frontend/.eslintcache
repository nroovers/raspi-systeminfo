[{"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\index.js":"1","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\App.js":"2","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\services\\infoService.js":"4","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\CpuInfo.js":"5","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\MemInfo.js":"6","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\Overview.js":"7","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\ProcInfo.js":"8","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\NetInfo.js":"9","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\Header.js":"10","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\SortTable.js":"11","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\Notification.js":"12","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\utils\\appStateUtils.js":"13","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\Loading.js":"14","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\config\\config.js":"15"},{"size":551,"mtime":1611860503212,"results":"16","hashOfConfig":"17"},{"size":2223,"mtime":1615124496080,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":829,"mtime":1615124114154,"results":"20","hashOfConfig":"17"},{"size":6151,"mtime":1615125218683,"results":"21","hashOfConfig":"17"},{"size":4597,"mtime":1615125101866,"results":"22","hashOfConfig":"17"},{"size":2036,"mtime":1615125025297,"results":"23","hashOfConfig":"17"},{"size":5372,"mtime":1615125121471,"results":"24","hashOfConfig":"17"},{"size":4246,"mtime":1613312224145,"results":"25","hashOfConfig":"17"},{"size":2177,"mtime":1615124829007,"results":"26","hashOfConfig":"17"},{"size":2688,"mtime":1612809768416,"results":"27","hashOfConfig":"17"},{"size":711,"mtime":1615125112053,"results":"28","hashOfConfig":"17"},{"size":1702,"mtime":1615113222390,"results":"29","hashOfConfig":"17"},{"size":444,"mtime":1612810242244,"results":"30","hashOfConfig":"17"},{"size":254,"mtime":1615125272517,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"68gzi8",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\index.js",[],["64","65"],"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\App.js",[],"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\services\\infoService.js",[],"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\CpuInfo.js",["66","67"],"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\MemInfo.js",["68","69"],"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\Overview.js",["70","71"],"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\ProcInfo.js",["72","73"],"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\NetInfo.js",["74","75"],"import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport infoService from '../services/infoService'\r\nimport SortTable from \"./SortTable\"\r\n// import Chart from \"react-google-charts\";\r\nimport appStateUtils from '../utils/appStateUtils'\r\n\r\nconst NetInfo = (props) => {\r\n    const [info, setInfo] = useState({ network: [], wifi: [] });\r\n\r\n    useEffect(() => {\r\n        appStateUtils.setLoading(props.appState, props.setAppState, true)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log('NetInfo useeffect Load')\r\n        let netInfoMounted = true\r\n        infoService.getInfo(['network', 'wifi'])\r\n            .then(data => {\r\n                console.log('NetInfo set data', data)\r\n                if (netInfoMounted) {\r\n                    setInfo({\r\n                        network: data.network,\r\n                        wifi: data.wifi,\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                appStateUtils.addNotification(\r\n                    props.appState,\r\n                    props.setAppState,\r\n                    { title: 'Error', body: <><p>Retrieving network data failed</p><p>{err.message}</p></>, type: 'danger' })\r\n            })\r\n            .finally(() =>\r\n                appStateUtils.setLoading(props.appState, props.setAppState, false)\r\n            )\r\n        return () => netInfoMounted = false\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Network</h2>\r\n            <SortTable\r\n                columns={[\r\n                    {\r\n                        header: 'iface',\r\n                        name: 'iface',\r\n                        getValue: row => row.iface\r\n                    },\r\n                    {\r\n                        header: 'ip4',\r\n                        name: 'ip4',\r\n                        getValue: row => row.ip4\r\n                    },\r\n                    {\r\n                        header: 'ip4subnet',\r\n                        name: 'ip4subnet',\r\n                        getValue: row => row.ip4subnet\r\n                    },\r\n                    {\r\n                        header: 'type',\r\n                        name: 'type',\r\n                        getValue: row => row.type\r\n                    },\r\n                    {\r\n                        header: 'virtual',\r\n                        name: 'virtual',\r\n                        getValue: row => row.virtual.toString()\r\n                    },\r\n                    {\r\n                        header: 'dhcp',\r\n                        name: 'dhcp',\r\n                        getValue: row => row.dhcp.toString()\r\n                    },\r\n\r\n                ]}\r\n                getRowKey={(row) => row.iface}\r\n                data={info.network}\r\n                updateDataState={(sortedData) => {\r\n                    setInfo({\r\n                        network: sortedData,\r\n                        wifi: info.wifi,\r\n                    })\r\n                }}\r\n            >\r\n            </SortTable>\r\n            <h2>WiFi</h2>\r\n            <SortTable\r\n                columns={[\r\n                    {\r\n                        header: 'ssid',\r\n                        name: 'ssid',\r\n                        getValue: row => row.ssid\r\n                    },\r\n                    {\r\n                        header: 'channel',\r\n                        name: 'channel',\r\n                        getValue: row => row.channel\r\n                    },\r\n                    {\r\n                        header: 'frequency',\r\n                        name: 'frequency',\r\n                        getValue: row => row.frequency\r\n                    },\r\n                    {\r\n                        header: 'security',\r\n                        name: 'security',\r\n                        getValue: row => row.security.join()\r\n                    },\r\n\r\n                ]}\r\n                getRowKey={(row) => row.ssid}\r\n                data={info.wifi}\r\n                updateDataState={(sortedData) => {\r\n                    setInfo({\r\n                        network: info.network,\r\n                        wifi: sortedData,\r\n                    })\r\n                }}\r\n            >\r\n            </SortTable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NetInfo ","C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\Header.js",["76"],"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\SortTable.js",[],"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\Notification.js",[],"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\utils\\appStateUtils.js",[],"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\components\\Loading.js",[],"C:\\Users\\Nicolai\\Documents\\Coding\\raspi-systeminfo\\frontend\\src\\config\\config.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":36,"column":8,"nodeType":"83","endLine":36,"endColumn":37,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":57,"column":8,"nodeType":"83","endLine":57,"endColumn":37,"suggestions":"86"},{"ruleId":"81","severity":1,"message":"82","line":13,"column":8,"nodeType":"83","endLine":13,"endColumn":37,"suggestions":"87"},{"ruleId":"81","severity":1,"message":"82","line":38,"column":8,"nodeType":"83","endLine":38,"endColumn":37,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"82","line":12,"column":8,"nodeType":"83","endLine":12,"endColumn":37,"suggestions":"89"},{"ruleId":"81","severity":1,"message":"82","line":36,"column":8,"nodeType":"83","endLine":36,"endColumn":37,"suggestions":"90"},{"ruleId":"81","severity":1,"message":"82","line":15,"column":8,"nodeType":"83","endLine":15,"endColumn":37,"suggestions":"91"},{"ruleId":"81","severity":1,"message":"82","line":37,"column":8,"nodeType":"83","endLine":37,"endColumn":37,"suggestions":"92"},{"ruleId":"81","severity":1,"message":"82","line":13,"column":8,"nodeType":"83","endLine":13,"endColumn":10,"suggestions":"93"},{"ruleId":"81","severity":1,"message":"82","line":38,"column":8,"nodeType":"83","endLine":38,"endColumn":10,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":4,"column":23,"nodeType":"97","messageId":"98","endLine":4,"endColumn":34},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.appState' and 'props.setAppState'. Either include them or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has missing dependencies: 'info', 'props.appState', and 'props.setAppState'. Either include them or remove the dependency array. You can also do a functional update 'setInfo(i => ...)' if you only need 'info' in the 'setInfo' call.",["102"],["103"],["104"],["105"],["106"],["107"],["108"],["109"],["110"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"111","fix":"115"},{"desc":"111","fix":"116"},{"desc":"111","fix":"117"},{"desc":"111","fix":"118"},{"desc":"111","fix":"119"},{"desc":"111","fix":"120"},{"desc":"121","fix":"122"},{"desc":"121","fix":"123"},"Update the dependencies array to be: [props.appState, props.appState.selectedNode, props.setAppState]",{"range":"124","text":"125"},"Update the dependencies array to be: [info, props.appState, props.appState.selectedNode, props.setAppState]",{"range":"126","text":"127"},{"range":"128","text":"125"},{"range":"129","text":"125"},{"range":"130","text":"125"},{"range":"131","text":"125"},{"range":"132","text":"125"},{"range":"133","text":"125"},"Update the dependencies array to be: [props.appState, props.setAppState]",{"range":"134","text":"135"},{"range":"136","text":"135"},[1560,1589],"[props.appState, props.appState.selectedNode, props.setAppState]",[2380,2409],"[info, props.appState, props.appState.selectedNode, props.setAppState]",[427,456],[1411,1440],[424,453],[1348,1377],[531,560],[1542,1571],[462,464],"[props.appState, props.setAppState]",[1403,1405]]